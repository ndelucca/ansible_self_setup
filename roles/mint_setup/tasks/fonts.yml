---
- name: Creating fonts directory...
  ansible.builtin.file:
    state: directory
    path: "{{ mint_setup_fonts_path }}"
    mode: "0644"

- name: Running mscorefonts terms and conditions hack...
  ansible.builtin.debconf:
    name: ttf-mscorefonts-installer
    question: msttcorefonts/accepted-mscorefonts-eula
    value: "true"
    vtype: select

- name: Running mscorefonts terms and conditions hack...
  ansible.builtin.debconf:
    name: ttf-mscorefonts-installer
    question: msttcorefonts/present-mscorefonts-eula
    value: ""
    vtype: select

- name: Installing apt fonts...
  ansible.builtin.apt:
    name: "{{ font_pkg }}"
  loop:
    - fonts-font-awesome
    - ttf-mscorefonts-installer
    - fonts-hack
    - fonts-noto
    - fonts-firacode
  loop_control:
    loop_var: font_pkg

- name: Creating jetbrainsmono directory...
  ansible.builtin.file:
    path: "{{ mint_setup_fonts_path }}/jetbrainsmono"
    state: directory
    mode: "0755"

- name: Installing jetbrainsmono fonts...
  ansible.builtin.unarchive:
    src: "JetBrainsMono-2.304.zip"
    dest: "{{ mint_setup_fonts_path }}/jetbrainsmono"
    remote_src: false
    owner: "{{ mint_setup_fonts_user }}"

- name: Creating Roboto directory...
  ansible.builtin.file:
    path: "{{ mint_setup_fonts_path }}/roboto"
    state: directory
    mode: "0755"

- name: Installing Roboto fonts...
  ansible.builtin.unarchive:
    src: Roboto.zip
    dest: "{{ mint_setup_fonts_path }}/roboto"
    remote_src: false
    owner: "{{ mint_setup_fonts_user }}"

- name: Creating Roboto Mono directory...
  ansible.builtin.file:
    path: "{{ mint_setup_fonts_path }}/roboto_mono"
    state: directory
    mode: "0755"

- name: Installing Roboto Mono fonts...
  ansible.builtin.unarchive:
    src: Roboto_Mono.zip
    dest: "{{ mint_setup_fonts_path }}/roboto_mono"
    remote_src: false
    owner: "{{ mint_setup_fonts_user }}"

- name: Updating fonts cache...
  ansible.builtin.command: fc-cache -f -v
  register: cache_output
  changed_when: cache_output.rc != 0
